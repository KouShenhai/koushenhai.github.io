(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{353:function(t,_,v){"use strict";v.r(_);var r=v(7),a=Object(r.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h4",{attrs:{id:"介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),_("p",[t._v("Saga模式是Seata提供的长事务解决方案，在Saga模式中，业务流程中每个参与者都提交本地事务，当出现某一个参与者失败则补偿前面已经成功的参与者，一阶段正向服务和二阶段补偿服务都由业务开发实现。（摘抄Seata官网文档）\n"),_("img",{attrs:{height:"300",hight:"300",src:"/img/ddd/1.png"}})]),t._v(" "),_("h4",{attrs:{id:"xt、at、tcc、saga区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#xt、at、tcc、saga区别"}},[t._v("#")]),t._v(" XT、AT、TCC、SAGA区别")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("模式")]),t._v(" "),_("th",[t._v("使用场景")]),t._v(" "),_("th",[t._v("优点")]),t._v(" "),_("th",[t._v("缺点")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("XT")]),t._v(" "),_("td",[t._v("1.标准的分布式事务处理模式"),_("br"),t._v("2.使用两阶段提交协议"),_("br"),t._v("3.适用于对一致性和隔离性有高要求的业务")]),t._v(" "),_("td",[t._v("1.事务强一致性，满足ACID原则"),_("br"),t._v("2.支持常用数据库，实现简单，没有代码侵入")]),t._v(" "),_("td",[t._v("因为一阶段需要锁定数据库资源，等待二阶段结束才释放，所以性能较差")])]),t._v(" "),_("tr",[_("td",[t._v("AT")]),t._v(" "),_("td",[t._v("1.无侵入的分布式解决方案"),_("br"),t._v("2.适用于不希望对业务进行改造的场景"),_("br"),t._v("3.每个本地事务都有一个与之对应的try和confirm方法"),_("br"),t._v("4.如果所有本地事务都执行成功，则全局提交，否则回滚")]),t._v(" "),_("td",[t._v("1. 无侵入性，适用于不需要对业务进行改造的场景"),_("br"),t._v("2.一阶段完成直接提交事务，释放数据库资源，性能较好")]),t._v(" "),_("td",[t._v("1.两阶段之间属于软状态，属于最终一致性"),_("br"),t._v("2.框架的快照功能会影响性能，但比XA模式好很多")])]),t._v(" "),_("tr",[_("td",[t._v("TCC")]),t._v(" "),_("td",[t._v("1.高性能分布式解决方案"),_("br"),t._v("2.适用于对性能有很高要求的场景"),_("br"),t._v("3.用户需要根据业务场景实现try、confirm和cancel三个操作")]),t._v(" "),_("td",[t._v("1.一阶段完成直接提交事务，释放数据库资源，性能好"),_("br"),t._v("2.相比AT模型，无需生成快照，无需使用全局锁，性能最强")]),t._v(" "),_("td",[t._v("1.代码有侵入，需要人为编写try、confirm和cancel接口"),_("br"),t._v("2.软状态，事务是最终一致")])]),t._v(" "),_("tr",[_("td",[t._v("SAGA")]),t._v(" "),_("td",[t._v("1.长事务解决方案"),_("br"),t._v("2.适用于业务流程长且需要保证事务最终一致性的场景"),_("br"),t._v("3.由多个参与者组成，每个参与者都是一个冲正补偿服务"),_("br"),t._v("4.参与者包含其他公司或遗留系统服务，无法提供TCC要求的三个接口")]),t._v(" "),_("td",[t._v("1.事务参与者可以基于事件驱动实现异步调用，吞吐高"),_("br"),t._v("2.一阶段直接提交事务，无锁，高性能"),_("br"),t._v("3.补偿服务易于实现")]),t._v(" "),_("td",[t._v("1.软状态持续时间不确定，时效性差"),_("br"),t._v("2.没有锁，不保证事务隔离性，会有脏读")])])])]),t._v(" "),_("p",[t._v("这些模式各有优缺点，具体选择取决于业务需求和系统架构，在实际应用中，可以通过以下方式避免或减少分布式事务")]),t._v(" "),_("ul",[_("li",[t._v("减少分布式事务使用：尽可能将业务设计为本地事务，减少分布式事务的使用")]),t._v(" "),_("li",[t._v("使用最终一致性：在一些场景中，可以接受数据的最终一致性，而不是强一致性，这样可以使用性能更好的AT模式和SAGA模式")]),t._v(" "),_("li",[t._v("使用补偿事务：在TCC和SAGA模式中，可以通过编写补偿事务来处理事务失败的情况，保证数据的一致性")]),t._v(" "),_("li",[t._v("优化事务处理：在XT模式中，可以通过优化事务处理的方式提高性能，例如使用更高效的锁机制，减少锁的持有时间")])]),t._v(" "),_("h4",{attrs:{id:""}},[_("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),_("h2",{attrs:{id:"参考资料"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://seata.apache.org/zh-cn/docs/user/mode/saga",target:"_blank",rel:"noopener noreferrer"}},[t._v("Seata官网文档"),_("OutboundLink")],1)])])}),[],!1,null,null,null);_.default=a.exports}}]);