(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{348:function(t,a,s){"use strict";s.r(a);var n=s(7),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("你好呀，我的老朋友！我是老寇，欢迎来到老寇云平台！"),a("br"),t._v("\n话不多说，跟我一起学习AQS。")]),t._v(" "),a("h6",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),a("p",[t._v("AQS全称"),a("code",[t._v("AbstractQueuedSynchronizer")]),t._v("（抽象队列同步器）")]),t._v(" "),a("h6",{attrs:{id:"原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),a("p",[t._v("如果请求"),a("code",[t._v("共享资源空闲，则将当前请求资源的线程设置为有效的工作线程，并将共享资源设置为锁定状态")]),a("br"),t._v("\n如果请求"),a("code",[t._v("共享资源被占用，暂时无法获取到锁的线程加入到队列中（需要一套线程阻塞等待以及被唤醒时锁分配的机制，CLH队列锁）")])]),t._v(" "),a("h6",{attrs:{id:"_1-clh队列锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-clh队列锁"}},[t._v("#")]),t._v(" 1.CLH队列锁")]),t._v(" "),a("p",[t._v("虚拟的双向队列（不存在队列实例，仅存在结点之间的关联关系）")]),t._v(" "),a("p",[t._v("我们一起画个简洁的图\n"),a("img",{attrs:{src:"/img/ddd/img_1.png",height:"250"}}),t._v(" "),a("img",{attrs:{src:"/img/ddd/img_2.png",height:"250"}})]),t._v(" "),a("p",[t._v("我们一起学习"),a("code",[t._v("AQS源码")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 同步状态值（保证线程可见性）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v("state")]),t._v("表示同步状态，通过内置的"),a("code",[t._v("线程等待队列")]),t._v("来完成获取资源线程的排队工作")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回当前同步状态值")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置同步状态值")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" newState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置同步状态值（CAS操作）")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareAndSetState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" expect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("U")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareAndSetInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STATE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" expect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h6",{attrs:{id:"reentrantlock"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reentrantlock"}},[t._v("#")]),t._v(" ReentrantLock")]),t._v(" "),a("p",[a("code",[t._v("ReentrantLock state")]),t._v("初始状态值为0，表示未锁定状态，线程A"),a("code",[t._v("lock()")]),t._v("时，会调用"),a("code",[t._v("tryAcquire()")]),t._v("独占该锁并将"),a("code",[t._v("state+1")]),t._v("\n然后，其他的线程再"),a("code",[t._v("tryAcquire()")]),t._v("时就会失败，直到线程A"),a("code",[t._v("unlock()")]),t._v("释放锁，"),a("code",[t._v("state=0")]),t._v("，其他线程才有机会获取该锁")]),t._v(" "),a("p",[t._v("释放锁之前，线程A自己可以重复获取此锁（state累加），请注意，获取多少次就要释放多少次，保证state归零")]),t._v(" "),a("h6",{attrs:{id:"countdownlatch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#countdownlatch"}},[t._v("#")]),t._v(" CountDownLatch")]),t._v(" "),a("p",[t._v("任务被分成N个子线程去执行，"),a("code",[t._v("state")]),t._v("初始化为N（N与线程个数保持一致），这N个子线程并发执行，每个子线程执行完后"),a("code",[t._v("countDown()")]),t._v("一次，state会通过CAS减1，直到所有子线程执行完后（state=0），会"),a("code",[t._v("unpark()")]),t._v("调用主线程，然后主线程会从"),a("code",[t._v("await()")]),t._v("返回，继续执行后面的业务")]),t._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://javaguide.cn/java/concurrent/java-concurrent-questions-03.html#aqs",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaGuide"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);