(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{347:function(a,t,s){"use strict";s.r(t);var n=s(7),e=Object(n.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("你好呀，我的老朋友！我是老寇，欢迎来到老寇云平台！"),t("br"),a._v("\n话不多说，跟我一起学习ThreadLocal。")]),a._v(" "),t("h4",{attrs:{id:"介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[a._v("#")]),a._v(" 介绍")]),a._v(" "),t("p",[a._v("它为每个线程提供一个本地变量副本，意味着每个线程都可以独立改变自己的副本，不会与其他线程的副本相冲突（线程隔离）")]),a._v(" "),t("h4",{attrs:{id:"原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[a._v("#")]),a._v(" 原理")]),a._v(" "),t("p",[a._v("首先，我们一起看看"),t("code",[a._v("Thread源码")])]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("implements")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Runnable")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// ...")]),a._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/*\n     * 与此线程相关的ThreadLocal值，由ThreadLocal类维护\n     */")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ThreadLocalMap")]),a._v(" threadLocals"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/*\n     * 与此线程相关的InheritableThreadLocal值，由InheritableThreadLocal类维护\n     */")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ThreadLocalMap")]),a._v(" inheritableThreadLocals"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// ..")]),a._v("\n    \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("Thread类维护了 "),t("code",[a._v("threadLocals")]),a._v("和"),t("code",[a._v("inheritableThreadLocals")]),a._v(" 变量，这两个变量默认为"),t("code",[a._v("null")])]),a._v(" "),t("p",[a._v("因此，我们一起看看"),t("code",[a._v("ThreadLocal源码")])]),a._v(" "),t("p",[t("code",[a._v("ThreadLocal")]),a._v("的"),t("code",[a._v("set()")]),a._v(" 方法")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),a._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 获取当前线程")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),a._v(" t "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("currentThread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 哈希结构")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocalMap")]),a._v(" map "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getMap")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("map "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 写入哈希表")]),a._v("\n            map"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 创建哈希表")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("createMap")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 如果是虚拟线程，则转储堆栈（这个先不讨论，请忽略）")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("TRACE_VTHREAD_LOCALS")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("dumpStackIfVirtualThread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocalMap")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getMap")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),a._v(" t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// threadLocals变量，见上文")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("threadLocals"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("因此，变量值是存在当前线程"),t("code",[a._v("Thread.ThreadLocalMap")]),a._v("里面的")]),a._v(" "),t("p",[a._v("我们一起看一看"),t("code",[a._v("ThreadLocalMap源码")])]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocalMap")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocalMap")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" firstKey"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v(" firstValue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// ...")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("因此，我们可以看到，每一个"),t("code",[a._v("Thread")]),a._v("维护两个"),t("code",[a._v("ThreadLocalMap")]),a._v("，"),t("code",[a._v("ThreadLocalMap")]),a._v("存储以"),t("code",[a._v("ThreadLocal")]),a._v("为key，Object对象为value的键值对")]),a._v(" "),t("p",[a._v("我们一起画一个简洁的图，加深理解"),t("br"),a._v(" "),t("img",{attrs:{src:"/img/ddd/img.png",height:"250"}})]),a._v(" "),t("p",[a._v("我们一起看看"),t("code",[a._v("ThreadLocalMap内部")])]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Entry")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("WeakReference")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Entry")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" k"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v(" v"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 弱引用")]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("super")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("k"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                value "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" v"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("我们可以看到，Entry是弱引用，我们一起了解一下，弱引用是什么？强引用又是什么？软引用？虚引用？")]),a._v(" "),t("p",[a._v("首先，4种级别"),t("code",[a._v("从高到低")]),a._v("依次为："),t("code",[a._v("强引用")]),a._v("，"),t("code",[a._v("软引用")]),a._v("，"),t("code",[a._v("弱引用")]),a._v("，"),t("code",[a._v("虚引用")])]),a._v(" "),t("h6",{attrs:{id:"_1-强引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-强引用"}},[a._v("#")]),a._v(" 1.强引用")]),a._v(" "),t("p",[a._v("强引用对象，即使内存不足，JVM抛出内存溢出错误（OOM）使程序异常终止，GC也不会随意回收具有"),t("code",[a._v("强引用")]),a._v("的对象")]),a._v(" "),t("h6",{attrs:{id:"_2-软引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-软引用"}},[a._v("#")]),a._v(" 2.软引用")]),a._v(" "),t("p",[a._v("软引用对象，内存充足时，GC不会回收，内存不足时，GC回收它")]),a._v(" "),t("h6",{attrs:{id:"_3-弱引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-弱引用"}},[a._v("#")]),a._v(" 3.弱引用")]),a._v(" "),t("p",[a._v("弱引用对象，具有短暂的生命周期，不管当前内存是否足够，GC都会回收它，GC是一个优先级很低的线程，不一定会很快发现具有弱引用的对象（和引用队列联合使用，被GC回收，会把它加到与之关联的引用队列中）")]),a._v(" "),t("h6",{attrs:{id:"_4-虚引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-虚引用"}},[a._v("#")]),a._v(" 4.虚引用")]),a._v(" "),t("p",[a._v("虚引用对象，和没有任何引用对象一样，任何时候都会被GC回收")]),a._v(" "),t("h6",{attrs:{id:"结论"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[a._v("#")]),a._v(" 结论")]),a._v(" "),t("p",[a._v("因此，结合上述这些源码及概念，我们可以看出，key为"),t("code",[a._v("ThreadLocal")]),a._v("的弱引用，value是强引用，"),t("code",[a._v("ThreadLocal")]),a._v("在外部没有强引用的情况下，GC会回收key，而value不会被回收。")]),a._v(" "),t("p",[a._v("这样就出现了key为"),t("code",[a._v("null")]),a._v("的Entry，我们不做任何的措施情况下，value永远不会被回收，这样就有可能造成内存泄露，所以，我们写代码时，最后一定要手动调用"),t("code",[a._v("remove()")]),a._v("方法")]),a._v(" "),t("h2",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[a._v("#")]),a._v(" 参考资料")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://javaguide.cn/java/concurrent/java-concurrent-questions-03.html#threadlocal",target:"_blank",rel:"noopener noreferrer"}},[a._v("JavaGuide"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=e.exports}}]);