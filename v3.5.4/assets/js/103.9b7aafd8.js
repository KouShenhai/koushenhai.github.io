(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{462:function(t,a,s){"use strict";s.r(a);var r=s(15),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("你好呀，我的老朋友！我是老寇，欢迎来到老寇云平台！")]),t._v(" "),a("p",[t._v("话不多说，讲一讲一键生成后端COLA代码！")]),t._v(" "),a("p",[t._v("大家有没有在写COLA时，为新建几个模块而头疼？实不相瞒，我经常手动新建模块，效率低且容易出错。\n这不，花了一两周多的时间，设计了一个COLA代码生成器，不说很智能，但至少可以减少不必要的操作，并且不易出错。")]),t._v(" "),a("p",[t._v("虽然花了很长的时间，但这一切都是值得的~")]),t._v(" "),a("h3",{attrs:{id:"设计理论"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计理论"}},[t._v("#")]),t._v(" 设计理论")]),t._v(" "),a("p",[t._v("根据COLA相关理论，提前设计好代码结构，然后通过20多种模板生成4层结构的代码")]),t._v(" "),a("h3",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[t._v(" 注意：这个代码生成器分为前端和后端代码，然而，前端模板还没有写，目前只支持后端")])],1),t._v(" "),a("img",{attrs:{src:"/img/一键生成后端COLA代码/img.png"}}),t._v(" "),a("h4",{attrs:{id:"配置数据源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置数据源"}},[t._v("#")]),t._v(" 配置数据源")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("datasource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dynamic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("datasource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("master")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("driver-class-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" org.postgresql.Driver\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" jdbc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("postgresql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//postgresql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("5432/kcloud_platform"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("?")]),t._v("tcpKeepAlive=true"),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-nacos&useSSL=false")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" laokou123\n")])])]),a("h4",{attrs:{id:"配置路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置路径"}},[t._v("#")]),t._v(" 配置路径")]),t._v(" "),a("img",{attrs:{src:"/img/一键生成后端COLA代码/img_1.png"}}),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[t._v("注意：支持zip压缩，目前注释啦~，可根据需要自行放开")]),t._v(" "),a("img",{attrs:{src:"/img/一键生成后端COLA代码/img_2.png"}})],1),t._v(" "),a("h4",{attrs:{id:"配置包名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置包名"}},[t._v("#")]),t._v(" 配置包名")]),t._v(" "),a("img",{attrs:{src:"/img/一键生成后端COLA代码/img_3.png"}}),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[t._v("注意：如果是新项目推荐Maven原型+代码生成器，否则只需要使用代码生成器")])],1),t._v(" "),a("p",[t._v("我是老寇，我们下次再见啦！")])])}),[],!1,null,null,null);a.default=e.exports}}]);